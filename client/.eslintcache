[{"C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\index.js":"1","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\App.js":"2","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\pages\\About.js":"3","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\pages\\Profile.js":"4","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\pages\\Home.js":"5","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\global\\Nav.js":"6","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\pages\\Room.js":"7","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\global\\NotFound.js":"8","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\room\\SongCard.js":"9","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\room\\List.js":"10","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\room\\NowPlaying.js":"11","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\room\\QueueSong.js":"12","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\config.js":"13"},{"size":538,"mtime":1611384025120,"results":"14","hashOfConfig":"15"},{"size":944,"mtime":1611370834387,"results":"16","hashOfConfig":"15"},{"size":88,"mtime":1611367387574,"results":"17","hashOfConfig":"15"},{"size":116,"mtime":1611367172751,"results":"18","hashOfConfig":"15"},{"size":4717,"mtime":1611384425374,"results":"19","hashOfConfig":"15"},{"size":3000,"mtime":1611372210575,"results":"20","hashOfConfig":"15"},{"size":991,"mtime":1611384374871,"results":"21","hashOfConfig":"15"},{"size":238,"mtime":1611367880122,"results":"22","hashOfConfig":"15"},{"size":911,"mtime":1611377068061,"results":"23","hashOfConfig":"15"},{"size":1611,"mtime":1611382171848,"results":"24","hashOfConfig":"15"},{"size":566,"mtime":1611384212555,"results":"25","hashOfConfig":"15"},{"size":267,"mtime":1611383755930,"results":"26","hashOfConfig":"15"},{"size":156,"mtime":1611383669033,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"3hphld",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\index.js",[],["63","64"],"C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\App.js",[],"C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\pages\\About.js",[],"C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\pages\\Profile.js",[],"C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\pages\\Home.js",["65"],"import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../styles/home.css\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { API } from 'aws-amplify';\r\n\r\nconst ROOM_CODE_LENGTH = 5;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n\r\n  const [roomCode, setRoomCode] = useState(\"\"); // Room code state\r\n  const [joinRoomDisabled, setJoinRoomDisabled] = useState(true); // Ensure valid code\r\n\r\n  const [newRoomDialogOpen, setNewRoomDialogOpen] = useState(false);\r\n\r\n  const handleNewRoomOpen = () => {\r\n    setNewRoomDialogOpen(true);\r\n  }\r\n\r\n  const handleNewRoomClose = () => {\r\n    setNewRoomDialogOpen(false);\r\n  }\r\n\r\n  /**\r\n   * Handle user text input for room codes\r\n   */\r\n  const handleChange = (e) => {\r\n    // TODO: Add logic such that no more than 5 characters inputted and checkmark when full\r\n    console.log(roomCode);\r\n    if (roomCode.length >= ROOM_CODE_LENGTH - 1) {\r\n      // TODO: Validate that the room code is valid in the DB\r\n      setJoinRoomDisabled(false);\r\n    } else {\r\n      setJoinRoomDisabled(true);\r\n    }\r\n    setRoomCode(e.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handle user selecting join room\r\n   * @param e\r\n   */\r\n  const joinRoom = (e) => {\r\n    history.push(`/room/${roomCode}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"room-container\">\r\n        <Paper component=\"form\" className={classes.root}>\r\n          <InputBase\r\n            className={classes.input}\r\n            placeholder=\"Enter Room Code\"\r\n            inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            onChange={handleChange}\r\n          />\r\n          <Divider className={classes.divider} orientation=\"vertical\" />\r\n          <IconButton\r\n            disabled={joinRoomDisabled}\r\n            color=\"primary\"\r\n            className={classes.iconButton}\r\n            aria-label=\"directions\"\r\n            onClick={joinRoom}\r\n          >\r\n            <ArrowForwardIosIcon />\r\n          </IconButton>\r\n        </Paper>\r\n      </div>\r\n\r\n      <div className=\"create-room\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleNewRoomOpen}>\r\n          Create New Room\r\n        </Button>\r\n      </div>\r\n      <NewRoomDialog open={newRoomDialogOpen} handleClose={handleNewRoomClose} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NewRoomDialog({open, handleClose}) {\r\n  const history = useHistory();\r\n  const [roomName, setRoomName] = useState('');\r\n\r\n  const createRoom = () => {\r\n    console.log(`Creating new room: ${roomName}`);\r\n    // TODO: Call API to create a new room and then load room component\r\n    const roomCode = \"12345\";\r\n\r\n    API.post('rooms', '/rooms/create', {\r\n      body: {\r\n        roomName, \r\n        creatorId: '123'\r\n      }\r\n    })\r\n    handleClose();\r\n    history.push(`/room/${roomCode}`)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setRoomName(e.target.value);\r\n  }\r\n\r\n  return (\r\n  <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n  <DialogTitle id=\"form-dialog-title\">Create a new music room!</DialogTitle>\r\n  <DialogContent>\r\n    {/* <DialogContentText>\r\n      Enter a room name to create a new room!\r\n    </DialogContentText> */}\r\n    <TextField\r\n      autoFocus\r\n      margin=\"dense\"\r\n      id=\"name\"\r\n      label=\"Room Name\"\r\n      type=\"name\"\r\n      value={roomName}\r\n      onChange={handleChange}\r\n      fullWidth\r\n    />\r\n  </DialogContent>\r\n  <DialogActions>\r\n    <Button onClick={handleClose} color=\"primary\">\r\n      Cancel\r\n    </Button>\r\n    <Button onClick={createRoom} color=\"primary\">\r\n      Create Room!\r\n    </Button>\r\n  </DialogActions>\r\n</Dialog>\r\n  );\r\n}","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\global\\Nav.js",["66"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/nav.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"var(--bg)\",\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: \"var(--bg)\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Nav() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        color=\"primary\"\r\n        className={classes.colorPrimary}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\">\r\n              AuxMe\r\n            </Link>\r\n          </Typography>\r\n          <div>\r\n            <IconButton color=\"inherit\">\r\n              {/* TODO: Fix the styling here?? TF */}\r\n              <Link to=\"/about\">\r\n                <InfoIcon />\r\n              </Link>\r\n            </IconButton>\r\n          </div>\r\n\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              {/* Sub Menu for Profiles */}\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\pages\\Room.js",["67","68","69","70","71"],"import { useEffect, useState } from \"react\";\r\nimport NowPlaying from \"../components/room/NowPlaying.js\";\r\nimport \"../styles/room.css\";\r\nimport QueueSong from \"../components/room/QueueSong\";\r\nimport List from \"../components/room/List.js\";\r\n\r\nexport default function Room(props) {\r\n    const noSongPlaying = {\r\n        name: \"Nothing currently playing\",\r\n        artist: \"N/A\",\r\n        length:0\r\n    }\r\n    const [songNowPlaying, setSongNowPlaying] = useState(noSongPlaying);\r\n    const [songList, setSongList] = useState({});\r\n    \r\n    const handleGetNextSong = () => {\r\n        // TODO: Make API call to pop next song from queue while fetching song info. Populate new song object\r\n        // TODO: update songList then songNowPlaying to force component update\r\n        const tmpSongList = [...songList];\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NowPlaying song={songNowPlaying}/>\r\n            <List songList = { songList }/>\r\n            <QueueSong/>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\global\\NotFound.js",[],"C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\room\\SongCard.js",["72","73","74"],"import { useState } from \"react\";\r\nimport \"../../styles/songCard.css\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nexport default function SongCard({ song, handleVote }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        padding: \"20px\",\r\n        justifyContent: \"space-evenly\",\r\n      }}\r\n    >\r\n      <div>{song.name}</div>\r\n      <div>{song.artist}</div>\r\n      <div>{song.votes}</div>\r\n      <IconButton onClick={() => handleVote(1, song.id)}>\r\n          <ArrowUpwardIcon />\r\n      </IconButton>\r\n      <IconButton onClick={() => handleVote(-1, song.id)}>\r\n          <ArrowDownwardIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LoadNewTrack({ hash }) {\r\n  return;\r\n}\r\n",["75","76"],"C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\room\\List.js",["77","78","79"],"import { useState } from \"react\";\r\nimport SongCard from \"./SongCard\";\r\n\r\nconst songCardList = [\r\n    //TODO: add default 'queue empty' row\r\n  {\r\n    name: \"I Love College\",\r\n    artist: \"Asher Roth\",\r\n    id: \"1\",\r\n    votes: 0,\r\n    length: 0\r\n  },\r\n  {\r\n    name: \"BUTTERFLY EFFECT\",\r\n    artist: \"Travis Scott\",\r\n    id: \"2\",\r\n    votes: 0,\r\n    length: 0\r\n\r\n  },\r\n  {\r\n    name: \"goosebumps\",\r\n    artist: \"Travis Scott\",\r\n    id: \"3\",\r\n    votes: 0,\r\n    length: 0\r\n\r\n  }\r\n];\r\n\r\nexport default function List( { songList }) {\r\n  const [songs, setSongs] = useState(songList);\r\n\r\n\r\n  const handleVote = (val, id) => {\r\n    console.log(\"Handling the vote\");\r\n    const newArray = [...songs]; \r\n\r\n    if (val == -1) {\r\n      console.log(\"Downvoted song with ID\", id);\r\n    //   TODO: Integrate with websocket \r\n        for (var i = 0; i < newArray.length; i++) {\r\n            if (newArray[i] === id) {\r\n                newArray[i].votes = newArray[i].votes - 1\r\n            }\r\n        }\r\n    } else {\r\n      console.log(\"Upvoted song with ID\", id);\r\n      for (var i = 0; i < newArray.length; i++) {\r\n        if (newArray[i].id === id) {\r\n            newArray[i].votes= newArray[i].votes + 1;\r\n        }\r\n    }\r\n    }\r\n    setSongs(newArray);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexWrap: \"wrap\", paddingTop: \"50px\" }}>\r\n    {/* TODO: Sort logic for same number of votes, one that was most recently voted should be on top  */}\r\n      {songs.sort((a, b) => a.votes < b.votes ? 1 : -1).map((song) => (\r\n        <SongCard song={song} handleVote={handleVote} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\room\\NowPlaying.js",["80"],"import { useState } from \"react\";\r\nimport { useEffect } from 'react';\r\nimport \"../../styles/nowplaying.css\";\r\nimport { ProgressBar } from 'react-bootstrap';\r\n\r\nexport default function NowPlaying ( { song } ) {\r\n    \r\n    const [timeElapsed, setTimeElapsed] = useState(0);\r\n\r\n    useEffect(() => {\r\n        this.interval = setInterval(() => setTimeElapsed(timeElapsed+1), 1000);\r\n    },[]);\r\n\r\n    return(\r\n        <div>\r\n            <h2>Now Playing: {song.name} by {song.artist}</h2>\r\n            <ProgressBar now={0} max={song.length}/>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\components\\room\\QueueSong.js",[],"C:\\Users\\Brent Champion\\Desktop\\qhacks\\client\\src\\config.js",["81"],"export default {\r\n    apiGateway: {\r\n        REGION: \"ca-central-1\",\r\n        URL: \"https://xicyp8tt7h.execute-api.ca-central-1.amazonaws.com/dev\"\r\n    }\r\n}",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":16,"column":8,"nodeType":"88","messageId":"89","endLine":16,"endColumn":25},{"ruleId":"86","severity":1,"message":"90","line":35,"column":9,"nodeType":"88","messageId":"89","endLine":35,"endColumn":21},{"ruleId":"86","severity":1,"message":"91","line":1,"column":10,"nodeType":"88","messageId":"89","endLine":1,"endColumn":19},{"ruleId":"86","severity":1,"message":"92","line":13,"column":28,"nodeType":"88","messageId":"89","endLine":13,"endColumn":45},{"ruleId":"86","severity":1,"message":"93","line":14,"column":22,"nodeType":"88","messageId":"89","endLine":14,"endColumn":33},{"ruleId":"86","severity":1,"message":"94","line":16,"column":11,"nodeType":"88","messageId":"89","endLine":16,"endColumn":28},{"ruleId":"86","severity":1,"message":"95","line":19,"column":15,"nodeType":"88","messageId":"89","endLine":19,"endColumn":26},{"ruleId":"86","severity":1,"message":"96","line":1,"column":10,"nodeType":"88","messageId":"89","endLine":1,"endColumn":18},{"ruleId":"86","severity":1,"message":"97","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":16},{"ruleId":"86","severity":1,"message":"98","line":31,"column":10,"nodeType":"88","messageId":"89","endLine":31,"endColumn":22},{"ruleId":"82","replacedBy":"99"},{"ruleId":"84","replacedBy":"100"},{"ruleId":"86","severity":1,"message":"101","line":4,"column":7,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":39,"column":13,"nodeType":"104","messageId":"105","endLine":39,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":49,"column":16,"nodeType":"88","messageId":"108","endLine":49,"endColumn":17},{"ruleId":"109","severity":1,"message":"110","line":12,"column":7,"nodeType":"111","endLine":12,"endColumn":9,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":1,"nodeType":"115","endLine":6,"endColumn":2},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'DialogContentText' is defined but never used.","Identifier","unusedVar","'handleChange' is assigned a value but never used.","'useEffect' is defined but never used.","'setSongNowPlaying' is assigned a value but never used.","'setSongList' is assigned a value but never used.","'handleGetNextSong' is assigned a value but never used.","'tmpSongList' is assigned a value but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'LoadNewTrack' is defined but never used.",["116"],["117"],"'songCardList' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'timeElapsed'. Either include it or remove the dependency array. You can also do a functional update 'setTimeElapsed(t => ...)' if you only need 'timeElapsed' in the 'setTimeElapsed' call.","ArrayExpression",["118"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [timeElapsed]",{"range":"121","text":"122"},[385,387],"[timeElapsed]"]