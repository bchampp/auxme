# Users
createUser:
  handler: 'src/handlers/users.createUser'
  description: "Create a new user"
  events:
    - http:
        path: 'users'
        method: post
        cors: true
getUser:
  handler: 'src/handlers/users.getUser'
  description: "Get user information"
  events:
    - http:
        path: 'users/{id}'
        method: get
        cors: true
updateUser:
  handler: 'src/handlers/users.updateUser'
  description: "Update an existing user"
  events:
    - http:
        path: 'users'
        method: patch
        cors: true
setUserTokens:
  handler: 'src/handlers/users.setUserTokens'
  description: "Saves a users spotify token"
  events:
    - http:
        path: 'users/spotify'
        method: post
        cors: true
deleteUser:
  handler: 'src/handlers/users.deleteUser'
  description: "Delete an existing user"
  events:
    - http:
        path: 'users'
        method: delete
        cors: true

# Rooms
createRoom:
  handler: 'src/handlers/rooms.createRoom'
  description: "Create a new room"
  events:
    - http:
        path: 'rooms'
        method: post
        cors: true
joinRoom:
  handler: 'src/handlers/rooms.joinRoom'
  description: "Join an existing room"
  events:
    - http:
        path: 'rooms'
        method: patch
        cors: true
getRooms:
  handler: 'src/handlers/rooms.getRooms'
  description: "Get all rooms associated with a user"
  events:
    - http:
        path: 'rooms/all/{id}'
        method: get
        cors: true
getRoom:
  handler: 'src/handlers/rooms.getRoom'
  description: "Get a rooms information"
  events:
    - http:
        path: 'rooms/{id}'
        method: get
        cors: true
deleteRoom: 
  handler: 'src/handlers/rooms.deleteRoom'
  description: "Delete an existing room"
  events: 
    - http:
        path: 'rooms/{id}'
        method: delete
        cors: true

# Queues
add:
  handler: 'src/handlers/queue.add'
  description: "Adds a new song to the queue"
  events:
    - http:
        path: 'queue/add'
        method: patch
        cors: true
remove: 
  handler: 'src/handlers/queue.remove'
  description: "Removes a song from the queue"
  events:
    - http:
        path: 'queue/remove'
        method: patch
        cors: true
vote:
  handler: 'src/handlers/queue.vote'
  description: "Handles voting for a song"
  events:
    - http:
        path: 'queue/vote'
        method: patch
        cors: true

# Spotify
spotifyLogin:
  handler: 'src/handlers/spotify.login'
  events:
    - http:
        path: 'spotify/login'
        method: get
        cors: true
spotifyCallback:
  handler: 'src/handlers/spotify.callback'
  events:
    - http:
        path: 'spotify/callback'
        method: get
        cors: true
